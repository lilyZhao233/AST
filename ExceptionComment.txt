 unexpected data appeared in an objectinputstream trying to read an object this exception occurs when the stream contains primitive data instead of the object expected by readobject the eof flag in the exception is true to indicate that no more primitive data is available the count field contains the number of bytes available to read 
 signals that an image format exception of some sort has occurred note that the classes in the com sun image codec jpeg package are not part of the core java apis they are a part of sun s jdk and jre distributions although other licensees may choose to distribute these classes developers cannot depend on their availability in non sun implementations we expect that equivalent functionality will eventually be available in a core api or standard extension 
 signals that a truncated file was detected this object contains the raster bufferedimage that has the partially decoded image data in it there is no indication of the portion of the raster that may or may not be good note that the classes in the com sun image codec jpeg package are not part of the core java apis they are a part of sun s jdk and jre distributions although other licensees may choose to distribute these classes developers cannot depend on their availability in non sun implementations we expect that equivalent functionality will eventually be available in a core api or standard extension 
 exception thrown when a ber encoding decoding error occurs this api is a sun microsystems internal api and is subject to change without notice 
 this exception is thrown when an incorrect security level is handled this api is a sun microsystems internal api and is subject to change without notice 
 this exception is thrown when an error occurs in an snmpsecuritymodel this api is a sun microsystems internal api and is subject to change without notice 
 constructs a new snmpstatusexception with the specified status error 
 is used internally to signal that the size of a pdu exceeds the packet size limitation you will not usually need to use this class except if you decide to implement your own link com sun jmx snmp snmppdufactory snmpdufactory object the varbindcount property contains the number of snmpvarbind successfully encoded before the exception was thrown its value is 0 when this number is unknown this api is a sun microsystems internal api and is subject to change without notice 
 this exception is thrown when an snmpaccesscontrolsubsystem doesn t know the passed id this api is a sun microsystems internal api and is subject to change without notice 
 this exception is thrown when a needed model is not present in the engine this api is a sun microsystems internal api and is subject to change without notice 
 this exception is thrown when an snmplcd has no modellcd associated to the model this api is a sun microsystems internal api and is subject to change without notice 
 this exception is thrown when an snmpmsgprocessingsubsystem doesn t know the passed id this api is a sun microsystems internal api and is subject to change without notice 
 this exception is thrown when an snmpsecuritysubsystem doesn t know the passed id this api is a sun microsystems internal api and is subject to change without notice 
 this exception is thrown when the handled snmpsubsystem is unknown this api is a sun microsystems internal api and is subject to change without notice 
 thrown when the bcel attempts to read a class file and determines that the file is malformed or otherwise cannot be interpreted as a class file 
 this class represents an entry in the exception table of the code attribute and is used only there it contains a range in which a particular exception handler is active 
 thrown on internal errors extends runtimeexception so it hasn t to be declared in the throws clause every time 
 thrown by instructionlist remove when one or multiple disposed instruction are still being referenced by a instructiontargeter object i e the instructiontargeter has to be notified that one of the instructionhandle it is referencing is being removed from the instructionlist and thus not valid anymore making this an exception instead of a return value forces the user to handle these case explicitely in a try catch the following code illustrates how this may be done try il delete start ih end ih catch targetlostexception e instructionhandle targets = e gettargets for int i=0 i 
 exception thrown to indicate a syntax error in a regular expression this is a non checked exception because you should only have problems compiling a regular expression during development if you are making regular expresion programs dynamically then you can catch it if you wish but should not be forced to 
 author g todd miller
 author g todd miller
 author morten jorgensen
 author jacek ambroziak
 author jacek ambroziak
 base class for datatype exceptions for dtd types the exception can be created from an error message for schema types it needs an error code as defined in appendix c of the structure spec plus an array of arguents for error message substitution 
 a runtime exception that s thrown if an error happens when the application tries to get a dv factory instance 
 datatype exception for invalid facet this exception is only used by schema datatypes 
 datatype exception for invalid values 
 xerces internal
 signals that a malformed byte sequence was detected by a java io reader that decodes bytes of a given encoding into characters 
 xerces internal
 xpath exception 
 this exception might be thrown by any constraint checking method 
 wraps link saxexception and make it an unchecked exception xerces xni doesn t allow link saxexception to be thrown so when the user supplied error handler throws it it needs to be tunneled through xerces it is a bug if this exception leaks to the application fixme use xniexception for this purpose it s already doing this kind of saxexception tunneling 
 an xni parser configuration exception this exception class extends xniexception in order to differentiate between general parsing errors and configuration errors 
 a parsing exception this exception is different from the standard xni exception in that it stores the location in the document or its entities where the exception occurred 
 this exception is the base exception of all xni exceptions it can be constructed with an error message or used to wrap another exception object note by extending the java runtimeexception xni handlers and components are not required to catch xni exceptions but may explicitly catch them if so desired 
 simple implementation of domexception review several classes were implementing this internally it makes more sense to have one shared version 
 create a new dtmexception 
 signal catalog exception this exception is thrown if an error occurs loading a catalog file 
 class canonicalizationexception
 constructor invalidcanonicalizerexception
 param msgid
 constructor algorithmalreadyregisteredexception
 this exception is thrown if decoding of base64 data fails 
 the mother of all exceptions in this bundle it allows exceptions to have their messages translated to the different locales the xmlsecurity en properties file contains this line xml wrongelement = can t create a 0 from a 1 element usage in the java source is object exargs = constants tag transforms badelement throw new xmlsecurityexception xml wrongelement exargs additionally if another exception has been caught we can supply it too> try catch exception oldex object exargs = constants tag transforms badelement throw new xmlsecurityexception xml wrongelement exargs oldex 
 the mother of all runtime exceptions in this bundle it allows exceptions to have their messages translated to the different locales the xmlsecurity en properties file contains this line xml wrongelement = can t create a 0 from a 1 element usage in the java source is object exargs = constants tag transforms badelement throw new xmlsecurityexception xml wrongelement exargs additionally if another exception has been caught we can supply it too> try catch exception oldex object exargs = constants tag transforms badelement throw new xmlsecurityexception xml wrongelement exargs oldex 
 constructor contenthandleralreadyregisteredexception
 constructor invalidkeyresolverexception
 constructor keyresolverexception
 constructor storageresolverexception
 raised when the computed hash value doesn t match the given digestvalue additional human readable info is passed to the constructor this being the benefit of raising an exception or returning a value 
 raised if testing the signature value over digestvalue fails because of invalid signature 
 thrown by link com sun org apache xml internal security signature signedinfo verify whentesting the signature fails because of uninitialized link com sun org apache xml internal security signature reference s 
 raised if verifying a link com sun org apache xml internal security signature reference failsbecause of an uninitialized link com sun org apache xml internal security signature xmlsignatureinput 
 all xml signature related exceptions inherit herefrom 
 author christian geuer pollmann
 author christian geuer pollmann
 this exception is thrown if something related to the link com sun org apache xml internal security utils resolver resourceresolver goes wrong 
 this class is for throwing important checked exceptions over non checked methods it should be used with care and in limited circumstances this class is a copy of the one in com sun org apache xml internal utils it exists to cut the serializers dependancy on that package this class is not a public api it is only public because it is used by com sun org apache xml internal serializer 
 this is a special exception that is used to stop parsing when search for an element for instance when searching for xml stylesheet pis it is used to stop the parse once the document element is found 
 primary checked exception 
 certain functions may throw this error if they are paired with the incorrect parser 
 a new exception to add support for dom level 3 xpath api this class is needed to throw a org w3c dom domexception with proper error code in createexpression method of xpathevaluatorimpl a dom level 3 class this class extends transformerexception because the error message includes information about where the xpath problem is in the stylesheet as well as the xpath expression itself 
 an exception that is thrown if the wrong number of arguments to an exception are specified by the stylesheet 
 this class implements an exception object that all xpath classes will throw in case of an error this class extends transformerexception and may hold other exceptions in the case of nested exceptions printstacktrace will dump all the traces of the nested exceptions not just the trace of this object 
 derived from xpathexception in order that xpath processor exceptions may be specifically caught 
 signals that an abstract window toolkit exception has occurred 
 constructs a cmmexception with the specified detail message 
 constructs a profiledataexception with the specified detail message 
 a class to encapsulate mimetype parsing related exceptions
 signals that the requested data is not supported in this flavor 
 this exception is thrown by various methods in the java awt dnd package it is usually thrown to indicate that the target in question is unable to undertake the requested operation that the present time since the underlying dnd system is not in the appropriate state 
 thrown by method createfont in the font class to indicate that the specified font is bad 
 the illegalpathstateexception represents an exception that is thrown if an operation is performed on a path that is in an illegal state with respect to the particular operation being performed such as appending a path segment to a link generalpath without an initial moveto 
 the noninvertibletransformexception class represents an exception that is thrown if an operation is performed requiring the inverse of an link affinetransform object but theaffinetransform is in a non invertible state 
 thrown when code that is dependent on a keyboard display or mouse is called in an environment that does not support a keyboard display or mouse 
 signals that an awt component is not in an appropriate state for the requested operation 
 the imagingopexception is thrown if one of the link bufferedimageop or link rasterop filter methods cannotprocess the image 
 the rasterformatexception is thrown if there is invalid layout information in the link raster 
 the printerabortexception class is a subclass of link printerexception and is used to indicate that a useror application has terminated the print job while it was in the process of printing 
 constructs a new printerexception object with the specified detail message 
 the printerioexception class is a subclass of link printerexception and is used to indicate that an io errorof some sort has occurred while printing as of release 1 4 this exception has been retrofitted to conform to the general purpose exception chaining mechanism the ioexception that terminated the print job that is provided at construction time and accessed via the link getioexception method is now known as the cause and may be accessed via the link throwable getcause method as well as the aforementioned legacy method 
 constructs an introspectionexception with a detailed message 
 constructs a propertyvetoexception with a detailed message 
 base class for character conversion exceptions 
 signals that an end of file or end of stream has been reached unexpectedly during input this exception is mainly used by data input streams to signal end of stream note that many other input operations return a special value on end of stream rather than throwing an exception 
 signals that an attempt to open the file denoted by a specified pathname has failed this exception will be thrown by the link fileinputstream link fileoutputstream and link randomaccessfile constructors when a filewith the specified pathname does not exist it will also be thrown by these constructors if the file does exist but for some reason is inaccessible for example when an attempt is made to open a read only file for writing 
 signals that an io operation has been interrupted an interruptedioexception is thrown to indicate that an input or output transfer has been terminated because the thread performing it was interrupted the field link bytestransferred indicates how many bytes were successfully transferred before the interruption occurred 
 thrown when the serialization runtime detects one of the following problems with a class the serial version of the class does not match that of the class descriptor read from the stream the class contains unknown datatypes the class does not have an accessible no arg constructor 
 indicates that one or more deserialized objects failed validation tests the argument should provide the reason for the failure 
 signals that an io exception of some sort has occurred this class is the general class of exceptions produced by failed or interrupted io operations 
 thrown when serialization or deserialization is not active 
 thrown when an instance is required to have a serializable interface the serialization runtime or the class of the instance can throw this exception the argument should be the name of the class 
 superclass of all exceptions specific to object stream classes 
 exception indicating the failure of an object read operation due to unread primitive data or the end of data belonging to a serialized object in the stream this exception may be thrown in two cases an attempt was made to read an object when the next element in the stream is primitive data in this case the optionaldataexception s length field is set to the number of bytes of primitive data immediately readable from the stream and the eof field is set to false an attempt was made to read past the end of data consumable by a class defined readobject or readexternal method in this case the optionaldataexception s eof field is set to true and the length field is set to 0 
 thrown when control information that was read from an object stream violates internal consistency checks 
 signals that a sync operation has failed 
 wraps an link ioexception with an unchecked exception 
 the character encoding is not supported 
 signals that a malformed string in modified utf 8 format has been read in a data input stream or by any class that implements the data input interface see the datainput class description for the format in which modified utf 8 strings are read and written 
 signals that one of the objectstreamexceptions was thrown during a write operation thrown during a read operation when one of the objectstreamexceptions was thrown during a write operation the exception that terminated the write can be found in the detail field the stream is reset to it s initial state and all references to objects already deserialized are discarded as of release 1 4 this exception has been retrofitted to conform to the general purpose exception chaining mechanism the exception causing the abort that is provided at construction time and accessed via the public link detail field is now known as thecause and may be accessed via the link throwable getcause method as well as the aforementioned legacy field 
 thrown to indicate that a program has attempted to access an element of an annotation whose type has changed after the annotation was compiled or serialized this exception can be thrown by the linkplain java lang reflect annotatedelement api used to read annotationsreflectively 
 thrown to indicate that a program has attempted to access an element of an annotation type that was added to the annotation type definition after the annotation was compiled or serialized this exception will not be thrown if the new element has a default value this exception can be thrown by the linkplain java lang reflect annotatedelement api used to read annotationsreflectively 
 thrown when an exceptional arithmetic condition has occurred for example an integer divide by zero throws an instance of this class code arithmeticexception objects may be constructed by thevirtual machine as if linkplain throwable throwable string throwable boolean boolean suppression were disabled and or thestack trace was not writable 
 thrown to indicate that an array has been accessed with an illegal index the index is either negative or greater than or equal to the size of the array 
 thrown to indicate that an attempt has been made to store the wrong type of object into an array of objects for example the following code generates an arraystoreexception object x = new string 3 x 0 = new integer 0 
 thrown to indicate that the code has attempted to cast an object to a subclass of which it is not an instance for example the following code generates a classcastexception object x = new integer 0 system out println string x 
 thrown when an application tries to load in a class through its string name using the forname method in class class the findsystemclass method in class classloader the loadclass method in class classloader but no definition for the class with the specified name could be found as of release 1 4 this exception has been retrofitted to conform to the general purpose exception chaining mechanism the optional exception that was raised while loading the class that may be provided at construction time and accessed via the link getexception method isnow known as the cause and may be accessed via the link throwable getcause method as well as the aforementioned legacy method 
 thrown to indicate that the clone method in class object has been called to clone an object but that the object s class does not implement the cloneable interface applications that override the clone method can also throw this exception to indicate that an object could not or should not be cloned 
 thrown when an application tries to access an enum constant by name and the enum type contains no constant with the specified name this exception can be thrown by the linkplain java lang reflect annotatedelement api used to read annotationsreflectively 
 the class code exception and its subclasses are a form of code throwable that indicates conditions that a reasonableapplication might want to catch the class code exception and any subclasses that are not alsosubclasses of link runtimeexception are checkedexceptions checked exceptions need to be declared in a method or constructor s code throws clause if they can be thrownby the execution of the method or constructor and propagate outside the method or constructor boundary 
 an illegalaccessexception is thrown when an application tries to reflectively create an instance other than an array set or get a field or invoke a method but the currently executing method does not have access to the definition of the specified class field method or constructor 
 thrown to indicate that a method has been passed an illegal or inappropriate argument 
 thrown to indicate that a thread has attempted to wait on an object s monitor or to notify other threads waiting on an object s monitor without owning the specified monitor 
 signals that a method has been invoked at an illegal or inappropriate time in other words the java environment or java application is not in an appropriate state for the requested operation 
 thrown to indicate that a thread is not in an appropriate state for the requested operation see for example the suspend and resume methods in class thread 
 thrown to indicate that an index of some sort such as to an array to a string or to a vector is out of range applications can subclass this class to indicate similar exceptions 
 thrown when an application tries to create an instance of a class using the code newinstance method in class code class but the specified class object cannot be instantiated the instantiation can fail for a variety of reasons including but not limited to the class object represents an abstract class an interface an array class a primitive type or code void the class has no nullary constructor 
 thrown by an implementation of link java lang instrument classfiletransformer transform classfiletransformer transform when its input parameters are invalid this may occur either because the initial class file bytes were invalid or a previously applied transform corrupted the bytes 
 thrown by an implementation of link java lang instrument instrumentation redefineclasses instrumentation redefineclasses when one of the specified classes cannot be modified 
 thrown when a thread is waiting sleeping or otherwise occupied and the thread is interrupted either before or during the activity occasionally a method may wish to test whether the current thread has been interrupted and if so to immediately throw this exception the following code can be used to achieve this effect if thread interrupted clears interrupted status throw new interruptedexception 
 constructs a code lambdaconversionexception 
 thrown to indicate that code has attempted to call a method handle via the wrong method type as with the bytecode representation of normal java method calls method handle calls are strongly typed to a specific type descriptor associated with a call site this exception may also be thrown when two method handles are composed and the system detects that their types cannot be matched up correctly this amounts to an early evaluation of the type mismatch at method handle construction time instead of when the mismatched method handle is called 
 thrown if an application tries to create an array with negative size 
 signals that the class doesn t have a field of a specified name 
 thrown when a particular method cannot be found 
 thrown when an application attempts to use code null in acase where an object is required these include calling the instance method of a code null object accessing or modifying the field of a code null object taking the length of code null as if it were an array accessing or modifying the slots of code null as if itwere an array throwing code null as if it were a code throwable value applications should throw instances of this class to indicate other illegal uses of the code null object code nullpointerexception objects may be constructed by thevirtual machine as if linkplain throwable throwable string throwable boolean boolean suppression were disabled and or thestack trace was not writable 
 thrown to indicate that the application has attempted to convert a string to one of the numeric types but that the string does not have the appropriate format 
 invocationtargetexception is a checked exception that wraps an exception thrown by an invoked method or constructor as of release 1 4 this exception has been retrofitted to conform to the general purpose exception chaining mechanism the target exception that is provided at construction time and accessed via the link gettargetexception method is now known as the cause and may be accessed via the link throwable getcause method as well as the aforementioned legacy method 
 thrown when a semantically malformed parameterized type is encountered by a reflective method that needs to instantiate it for example if the number of type arguments to a parameterized type is wrong 
 thrown when link java lang reflect executable getparameters thejava lang reflect package attempts to read method parameters froma class file and determines that one or more parameters are malformed the following is a list of conditions under which this exception can be thrown the number of parameters parameter count is wrong for the method a constant pool index is out of bounds a constant pool index does not refer to a utf 8 entry a parameter s name is or contains an illegal character the flags field contains an illegal flag something other than final synthetic or mandated see link java lang reflect executable getparameters for moreinformation 
 thrown by a method invocation on a proxy instance if its invocation handler s link invocationhandler invoke invoke method throws achecked exception a code throwable that is not assignableto code runtimeexception or code error that is not assignable to any of the exception types declared in the code throws clause of the method that was invoked on theproxy instance and dispatched to the invocation handler an code undeclaredthrowableexception instance containsthe undeclared checked exception that was thrown by the invocation handler and it can be retrieved with the code getundeclaredthrowable method code undeclaredthrowableexception extends code runtimeexception so it is an unchecked exception that wraps a checked exception as of release 1 4 this exception has been retrofitted to conform to the general purpose exception chaining mechanism the undeclared checked exception that was thrown by the invocation handler that may be provided at construction time and accessed via the link getundeclaredthrowable method is now known as thecause and may be accessed via the link throwable getcause method as well as the aforementioned legacymethod 
 common superclass of exceptions thrown by reflective operations in core reflection 
 code runtimeexception is the superclass of thoseexceptions that can be thrown during the normal operation of the java virtual machine code runtimeexception and its subclasses are uncheckedexceptions unchecked exceptions do not need to be declared in a method or constructor s code throws clause if theycan be thrown by the execution of the method or constructor and propagate outside the method or constructor boundary 
 thrown by the security manager to indicate a security violation 
 thrown by code string methods to indicate that an indexis either negative or greater than the size of the string for some methods such as the charat method this exception also is thrown when the index is equal to the size of the string 
 thrown when an application tries to access a type using a string representing the type s name but no definition for the type with the specified name can be found this exception differs from link classnotfoundexception in that classnotfoundexception is achecked exception whereas this exception is unchecked note that this exception may be used when undefined type variables are accessed as well as when types e g classes interfaces or annotation types are loaded in particular this exception can be thrown by the linkplain java lang reflect annotatedelement api used to read annotationsreflectively 
 thrown to indicate that the requested operation is not supported this class is a member of the java collections framework 
 signals that an error occurred while attempting to bind a socket to a local address and port typically the port is in use or the requested local address could not be assigned 
 signals that an error occurred while attempting to connect a socket to a remote address and port typically the connection was refused remotely e g no process is listening on the remote address port 
 thrown to indicate that a http request needs to be retried but cannot be retried automatically due to streaming mode being enabled 
 thrown to indicate that a malformed url has occurred either no legal protocol could be found in a specification string or the string could not be parsed 
 signals that an error occurred while attempting to connect a socket to a remote address and port typically the remote host cannot be reached because of an intervening firewall or if an intermediate router is down 
 signals that an icmp port unreachable message has been received on a connected datagram 
 thrown to indicate that there is an error in the underlying protocol such as a tcp error 
 thrown to indicate that there is an error creating or accessing a socket 
 signals that a timeout has occurred on a socket read or accept 
 thrown to indicate that the ip address of a host could not be determined 
 thrown to indicate that an unknown service exception has occurred either the mime type returned by a url connection does not make sense or the application is attempting to write to a read only url connection 
 checked exception thrown to indicate that a string could not be parsed as a uri reference 
 unchecked exception thrown when a relative put operation reaches the target buffer s limit 
 unchecked exception thrown when a relative get operation reaches the source buffer s limit 
 unchecked exception thrown when an attempt is made to initiate an accept operation on a channel and a previous accept operation has not completed 
 unchecked exception thrown when an attempt is made to bind the socket a network oriented channel that is already bound 
 unchecked exception thrown when an attempt is made to connect a link socketchannel that is already connected 
 checked exception received by a thread when another thread closes the channel or the part of the channel upon which it is blocked in an io operation 
 unchecked exception thrown when an attempt is made to use a selection key that is no longer valid 
 checked exception received by a thread when another thread interrupts it while it is blocked in an io operation upon a channel before this exception is thrown the channel will have been closed and the interrupt status of the previously blocked thread will have been set 
 checked exception thrown when an attempt is made to invoke or complete an io operation upon channel that is closed or at least closed to that operation that this exception is thrown does not necessarily imply that the channel is completely closed a socket channel whose write half has been shut down for example may still be open for reading 
 unchecked exception thrown when an attempt is made to invoke an io operation upon a closed selector 
 unchecked exception thrown when an attempt is made to connect a link socketchannel for which a non blocking connection operation is already inprogress 
 checked exception received by a thread when another thread interrupts it while it is waiting to acquire a file lock before this exception is thrown the interrupt status of the previously blocked thread will have been set 
 unchecked exception thrown when a blocking mode specific operation is invoked upon a channel in the incorrect blocking mode 
 unchecked exception thrown when an attempt is made to open a channel in a group that was not created by the same provider 
 unchecked exception thrown when an attempt is made to register a channel with a selector that was not created by the provider that created the channel 
 checked exception received by a thread when a timeout elapses before an asynchronous operation completes 
 unchecked exception thrown when the link socketchannel finishconnect finishconnect method of a link socketchannel is invoked without firstsuccessfully invoking its link socketchannel connect connect method 
 unchecked exception thrown when an attempt is made to read from a channel that was not originally opened for reading 
 unchecked exception thrown when an attempt is made to write to a channel that was not originally opened for writing 
 unchecked exception thrown when an attempt is made to invoke an io operation upon a server socket channel that is not yet bound 
 unchecked exception thrown when an attempt is made to invoke an io operation upon a socket channel that is not yet connected 
 unchecked exception thrown when an attempt is made to acquire a lock on a region of a file that overlaps a region already locked by the same java virtual machine or when another thread is already waiting to lock an overlapping region of the same file 
 unchecked exception thrown when an attempt is made to read from an asynchronous socket channel and a previous read has not completed 
 unchecked exception thrown when an attempt is made to construct a channel in a group that is shutdown or the completion handler for an io operation cannot be invoked because the channel group has terminated 
 unchecked exception thrown when an attempt is made to invoke a network operation upon an unresolved socket address 
 unchecked exception thrown when an attempt is made to bind or connect to a socket address of a type that is not supported 
 unchecked exception thrown when an attempt is made to write to an asynchronous socket channel and a previous write has not completed 
 checked exception thrown when a character encoding or decoding error occurs 
 unchecked exception thrown when a string that is not a legal charset name is used as such 
 checked exception thrown when an input byte sequence is not legal for given charset or an input character sequence is not a legal sixteen bit unicode sequence 
 checked exception thrown when an input character or byte sequence is valid but cannot be mapped to an output byte or character sequence 
 unchecked exception thrown when no support is available for a requested charset 
 checked exception thrown when a file system operation is denied typically due to a file permission or other access check this exception is not related to the link java security accesscontrolexception accesscontrolexception or link securityexception thrown by access controllers or security managers whenaccess to a file is denied 
 checked exception thrown when a file cannot be moved as an atomic file system operation 
 checked exception thrown when a lookup of link userprincipal fails becausethe principal does not exist 
 unchecked exception thrown when an attempt is made to invoke an operation on a directory stream that is closed 
 runtime exception thrown if an io error is encountered when iterating over the entries in a directory the io error is retrieved as an link ioexception using the link getcause getcause method 
 checked exception thrown when a file system operation fails because a directory is not empty 
 checked exception thrown when an attempt is made to create a file or directory and a file of that name already exists 
 constructs an instance of this class 
 thrown when a file system operation fails on one or two files this class is the general class for file system exceptions 
 checked exception thrown when a file system loop or cycle is encountered 
 constructs an instance of this class 
 unchecked exception thrown when path string cannot be converted into a link path because the path string contains invalid characters orthe path string is invalid for other file system specific reasons 
 checked exception thrown when an attempt is made to access a file that does not exist 
 checked exception thrown when a file system operation intended for a directory fails because the file is not a directory 
 checked exception thrown when a file system operation fails because a file is not a symbolic link 
 constructs an instance of this class 
 constructs an instance of this class 
 unchecked exception thrown when an attempt is made to update an object associated with a link filesystem isreadonly read only code filesystem 
 unchecked exception thrown when an attempt is made to reset a buffer when its mark is not defined 
 unchecked exception thrown when a content mutation method such as put or compact is invoked upon a read only buffer 
 an accessexception is thrown by certain methods of the java rmi naming class specifically bind rebind and unbind and methods of the java rmi activation activationsystem interface to indicate that the caller does not have permission to perform the action requested by the method call if the method was invoked from a non local host then an accessexception is thrown 
 this exception is thrown by the rmi runtime when activation fails during a remote call to an activatable object 
 general exception used by the activation interfaces as of release 1 4 this exception has been retrofitted to conform to the general purpose exception chaining mechanism the detail exception that may be provided at construction time and accessed via the public link detail field is now known as the cause and may beaccessed via the link throwable getcause method as well asthe aforementioned legacy field invoking the method link throwable initcause throwable on aninstance of activationexception always throws link illegalstateexception 
 an unknowngroupexception is thrown by methods of classes and interfaces in the java rmi activation package when the activationgroupid parameter to the method is determined to be invalid i e not known by the activationsystem an unknowngroupexception is also thrown if the activationgroupid in an activationdesc refers to a group that is not registered with the activationsystem
 an unknownobjectexception is thrown by methods of classes and interfaces in the java rmi activation package when the activationid parameter to the method is determined to be invalid an activationid is invalid if it is not currently known by the activationsystem an activationid is obtained by the activationsystem registerobject method an activationid is also obtained during the activatable register call 
 an alreadyboundexception is thrown if an attempt is made to bind an object in the registry to a name that already has an associated binding 
 a connectexception is thrown if a connection is refused to the remote host for a remote method call 
 a connectioexception is thrown if an ioexception occurs while making a connection to the remote host for a remote method call 
 a marshalexception is thrown if a java io ioexception occurs while marshalling the remote call header arguments or return value for a remote method call a marshalexception is also thrown if the receiver does not support the protocol version of the sender if a marshalexception occurs during a remote method call the call may or may not have reached the server if the call did reach the server parameters may have been deserialized a call may not be retransmitted after a marshalexception and reliably preserve at most once call semantics 
 a nosuchobjectexception is thrown if an attempt is made to invoke a method on an object that no longer exists in the remote virtual machine if a nosuchobjectexception occurs attempting to invoke a method on a remote object the call may be retransmitted and still preserve rmi s at most once call semantics a nosuchobjectexception is also thrown by the method java rmi server remoteobject tostub and by the unexportobject methods of java rmi server unicastremoteobject and java rmi activation activatable and
 a notboundexception is thrown if an attempt is made to lookup or unbind in the registry a name that has no associated binding 
 a remoteexception is the common superclass for a number of communication related exceptions that may occur during the execution of a remote method call each method of a remote interface an interface that extends java rmi remote must list remoteexception in its throws clause as of release 1 4 this exception has been retrofitted to conform to the general purpose exception chaining mechanism the wrapped remote exception that may be provided at construction time and accessed via the public link detail field is now known as the cause andmay be accessed via the link throwable getcause method as well asthe aforementioned legacy field invoking the method link throwable initcause throwable on aninstance of remoteexception always throws link illegalstateexception 
 an rmisecurityexception signals that a security exception has occurred during the execution of one of java rmi rmisecuritymanager s methods 
 an exportexception is a remoteexception thrown if an attempt to export a remote object fails a remote object is exported via the constructors and exportobject methods of java rmi server unicastremoteobject and java rmi activation activatable 
 a servercloneexception is thrown if a remote exception occurs during the cloning of a unicastremoteobject as of release 1 4 this exception has been retrofitted to conform to the general purpose exception chaining mechanism the nested exception that may be provided at construction time and accessed via the public link detail field is now known as the cause and may beaccessed via the link throwable getcause method as well asthe aforementioned legacy field invoking the method link throwable initcause throwable on aninstance of servercloneexception always throws link illegalstateexception 
 an servernotactiveexception is an exception thrown during a call to remoteserver getclienthost if the getclienthost method is called outside of servicing a remote method call 
 this exception is thrown when a call is received that does not match the available skeleton it indicates either that the remote method names or signatures in this interface have changed or that the stub class used to make the call and the skeleton receiving the call were not generated by the same version of the stub compiler rmic 
 a skeletonnotfoundexception is thrown if the skeleton corresponding to the remote object being exported is not found skeletons are no longer required so this exception is never thrown 
 an obsolete subclass of link exportexception 
 a serverexception is thrown as a result of a remote method invocation when a remoteexception is thrown while processing the invocation on the server either while unmarshalling the arguments or executing the remote method itself a serverexception instance contains the original remoteexception that occurred as its cause 
 from a server executing on jdk nbsp 1 1 a serverruntimeexception is thrown as a result of a remote method invocation when a runtimeexception is thrown while processing the invocation on the server either while unmarshalling the arguments executing the remote method itself or marshalling the return value a serverruntimeexception instance contains the original runtimeexception that occurred as its cause a serverruntimeexception is not thrown from servers executing on the java 2 platform v1 2 or later versions 
 a stubnotfoundexception is thrown if a valid stub class could not be found for a remote object when it is exported a stubnotfoundexception may also be thrown when an activatable object is registered via the java rmi activation activatable register method 
 an unexpectedexception is thrown if the client of a remote method call receives as a result of the call a checked exception that is not among the checked exception types declared in the throws clause of the method in the remote interface 
 an unknownhostexception is thrown if a java net unknownhostexception occurs while creating a connection to the remote host for a remote method call 
 an unmarshalexception can be thrown while unmarshalling the parameters or results of a remote method call if any of the following conditions occur if an exception occurs while unmarshalling the call header if the protocol for the return value is invalid if a java io ioexception occurs unmarshalling parameters on the server side or the return value on the client side if a java lang classnotfoundexception occurs during unmarshalling parameters or return values if no skeleton can be loaded on the server side note that skeletons are required in the 1 1 stub protocol but not in the 1 2 stub protocol if the method hash is invalid i e missing method if there is a failure to create a remote reference object for a remote object s stub when it is unmarshalled 
 this exception is thrown by the accesscontroller to indicate that a requested access to a critical system resource such as the file system or the network is denied the reason to deny access can vary for example the requested permission might be of an incorrect type contain an invalid value or request access that is not allowed according to the security policy such information should be given whenever possible at the time the exception is thrown 
 this is an exception that is thrown whenever a reference is made to a non existent acl access control list 
 this is an exception that is thrown whenever an attempt is made to delete the last owner of an access control list 
 this is an exception that is thrown whenever the modification of an object such as an access control list is only allowed to be done by an owner of the object but the principal attempting the modification is not an owner 
 certificate encoding exception this is thrown whenever an error occurs while attempting to encode a certificate 
 this exception indicates one of a variety of certificate problems 
 certificate expired exception this is thrown whenever the current code date or the specified code date is after the code notafter date time specified in the validity periodof the certificate 
 certificate is not yet valid exception this is thrown whenever the current code date or the specified code date is before the code notbefore date time in the certificatevalidity period 
 certificate parsing exception this is thrown whenever an invalid der encoded certificate is parsed or unsupported der features are found in the certificate 
 an exception that indicates an x 509 certificate is revoked a code certificaterevokedexception contains additional informationabout the revoked certificate such as the date on which the certificate was revoked and the reason it was revoked 
 an exception indicating one of a variety of problems encountered when building a certification path with a code certpathbuilder a code certpathbuilderexception provides support for wrappingexceptions the link getcause getcause method returns the throwable if any that caused this exception to be thrown concurrent access unless otherwise specified the methods defined in this class are not thread safe multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking multiple threads each manipulating separate objects need not synchronize 
 an exception indicating one of a variety of problems encountered when validating a certification path a code certpathvalidatorexception provides support for wrappingexceptions the link getcause getcause method returns the throwable if any that caused this exception to be thrown a code certpathvalidatorexception may also include thecertification path that was being validated when the exception was thrown the index of the certificate in the certification path that caused the exception to be thrown and the reason that caused the failure use the link getcertpath getcertpath link getindex getindex and link getreason getreason methods to retrieve this information concurrent access unless otherwise specified the methods defined in this class are not thread safe multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking multiple threads each manipulating separate objects need not synchronize 
 an exception indicating one of a variety of problems retrieving certificates and crls from a code certstore a code certstoreexception provides support for wrappingexceptions the link getcause getcause method returns the throwable if any that caused this exception to be thrown concurrent access unless otherwise specified the methods defined in this class are not thread safe multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking multiple threads each manipulating separate objects need not synchronize 
 crl certificate revocation list exception 
 this is the generic message digest exception 
 the code generalsecurityexception class is a genericsecurity exception class that provides type safety for all the security related exception classes that extend from it 
 this is the exception for invalid or inappropriate algorithm parameters 
 this is the exception for invalid keys invalid encoding wrong length uninitialized etc 
 this exception designed for use by the jca jce engine classes is thrown when an invalid parameter is passed to a method 
 this is the basic key exception 
 this is the general key management exception for all operations dealing with key management examples of subclasses of keymanagementexception that developers might create for giving more detailed information could include keyidconflictexception keyauthorizationfailureexception expiredkeyexception 
 this is the generic keystore exception 
 this exception is thrown when a particular cryptographic algorithm is requested but is not available in the environment 
 this exception is thrown when a particular security provider is requested but is not available in the environment 
 this exception is thrown by code doprivileged privilegedexceptionaction and code doprivileged privilegedexceptionaction accesscontrolcontext context to indicatethat the action being performed threw a checked exception the exception thrown by the action can be obtained by calling the code getexception method in effect an code privilegedactionexception is a wrapper for an exception thrown by a privileged action as of release 1 4 this exception has been retrofitted to conform to the general purpose exception chaining mechanism the exception thrown by the privileged computation that is provided at construction time and accessed via the link getexception method is now known as thecause and may be accessed via the link throwable getcause method as well as the aforementioned legacy method 
 a runtime exception for provider exceptions such as misconfiguration errors or unrecoverable internal errors which may be subclassed by providers to throw specialized provider specific runtime errors 
 this is the generic signature exception 
 this is the exception for invalid key specifications 
 this is the exception for invalid parameter specifications 
 this exception is thrown if an entry in the keystore cannot be recovered 
 this exception is thrown if a key in the keystore cannot be recovered 
 the subclass of link sqlexception thrown when an erroroccurs during a batch update operation in addition to the information provided by link sqlexception a batchupdateexception provides the update counts for all commands that were executed successfully during the batch update that is all commands that were executed before the error occurred the order of elements in an array of update counts corresponds to the order in which commands were added to the batch after a command in a batch update fails to execute properly and a batchupdateexception is thrown the driver may or may not continue to process the remaining commands in the batch if the driver continues processing after a failure the array returned by the method batchupdateexception getupdatecounts will have an element for every command in the batch rather than only elements for the commands that executed successfully before the error in the case where the driver continues processing commands the array element for any command that failed is statement execute failed a jdbc driver implementation should use the constructor code batchupdateexception string reason string sqlstate int vendorcode long updatecounts throwable cause instead ofconstructors that take code int for the update counts to avoid thepossibility of overflow if code statement executelargebatch method is invoked it is recommended that code getlargeupdatecounts be called instead of code getupdatecounts in order to avoid a possible overflow of the integer update count 
 the subclass of link sqlexception is thrown when one or more client info propertiescould not be set on a connection in addition to the information provided by sqlexception a sqlclientinfoexception provides a list of client info properties that were not set some databases do not allow multiple client info properties to be set atomically for those databases it is possible that some of the client info properties had been set even though the connection setclientinfo method threw an exception an application can use the getfailedproperties method to retrieve a list of client info properties that were not set the properties are identified by passing a map lt string clientinfostatus gt to the appropriate sqlclientinfoexception constructor 
 the subclass of link sqlexception thrown when the sqlstate class valueis 22 or under vendor specified conditions this indicates various data errors including but not limited to data conversion errors division by 0 and invalid arguments to functions please consult your driver vendor documentation for the vendor specified conditions for which this exception may be thrown 
 constructs a sqlexception object with a given reason sqlstate and vendorcode the cause is not initialized and may subsequently be initialized by a call to the link throwable initcause java lang throwable method 
 the subclass of link sqlexception thrown when the sqlstate class value is 0a the value is zero a this indicates that the jdbc driver does not support an optional jdbc feature optional jdbc features can fall into the fallowing categories no support for an optional feature no support for an optional overloaded method no support for an optional mode for a method the mode for a method is determined based on constants passed as parameter values to a method 
 the subclass of link sqlexception thrown when the sqlstate class valueis 23 or under vendor specified conditions this indicates that an integrity constraint foreign key primary key or unique key has been violated please consult your driver vendor documentation for the vendor specified conditions for which this exception may be thrown 
 the subclass of link sqlexception thrown when the sqlstate class valueis 28 or under vendor specified conditions this indicates that the authorization credentials presented during connection establishment are not valid please consult your driver vendor documentation for the vendor specified conditions for which this exception may be thrown 
 the subclass of link sqlexception thrown for the sqlstateclass value 08 or under vendor specified conditions this indicates that the connection operation that failed will not succeed if the operation is retried without the cause of the failure being corrected please consult your driver vendor documentation for the vendor specified conditions for which this exception may be thrown 
 the subclass of link sqlexception thrown when an instance where a retryof the same operation would fail unless the cause of the sqlexception is corrected 
 the subclass of link sqlexception thrown in situations where apreviously failed operation might be able to succeed if the application performs some recovery steps and retries the entire transaction or in the case of a distributed transaction the transaction branch at a minimum the recovery operation must include closing the current connection and getting a new connection 
 the subclass of link sqlexception thrown when the sqlstate class valueis 42 or under vendor specified conditions this indicates that the in progress query has violated sql syntax rules please consult your driver vendor documentation for the vendor specified conditions for which this exception may be thrown 
 the subclass of link sqlexception thrown when the timeout specified by code statement setquerytimeout code drivermanager setlogintimeout code datasource setlogintimeout code xadatasource setlogintimeout has expired this exception does not correspond to a standard sqlstate 
 the subclass of link sqlexception thrown when the sqlstate class valueis 40 or under vendor specified conditions this indicates that the current statement was automatically rolled back by the database because of deadlock or other transaction serialization failures please consult your driver vendor documentation for the vendor specified conditions for which this exception may be thrown 
 the subclass of link sqlexception for the sqlstate classvalue 08 or under vendor specified conditions this indicates that the connection operation that failed might be able to succeed if the operation is retried without any application level changes please consult your driver vendor documentation for the vendor specified conditions for which this exception may be thrown 
 the subclass of link sqlexception is thrown in situations where apreviously failed operation might be able to succeed when the operation is retried without any intervention by application level functionality 
 signals that an error has been reached unexpectedly while parsing 
 exception used to indicate a problem while calculating a date time this exception is used to indicate problems with creating querying and manipulating date time objects 
 an exception thrown when an error occurs during parsing this exception includes the text being parsed and the error index 
 unsupportedtemporaltypeexception indicates that a chronofield or chronounit is not supported for a temporal class 
 thrown to indicate a problem with time zone configuration this exception is used to indicate a problems with the configured time zone rules 
 exception thrown when a thread tries to wait upon a barrier that is in a broken state or which enters the broken state while the thread is waiting 
 exception indicating that the result of a value producing task such as a link futuretask cannot be retrieved because the task was cancelled 
 exception thrown when an error or other exception is encountered in the course of completing a result or task 
 exception thrown when attempting to retrieve the result of a task that aborted by throwing an exception this exception can be inspected using the link getcause method 
 exception thrown by an link executor when a task cannot beaccepted for execution 
 exception thrown when a blocking operation times out blocking operations for which a timeout is specified need a means to indicate that the timeout has occurred for many such operations it is possible to return a value that indicates timeout when that is not possible or desirable then code timeoutexception should bedeclared and thrown 
 this exception may be thrown by methods that have detected concurrent modification of an object when such modification is not permissible for example it is not generally permissible for one thread to modify a collection while another thread is iterating over it in general the results of the iteration are undefined under these circumstances some iterator implementations including those of all the general purpose collection implementations provided by the jre may choose to throw this exception if this behavior is detected iterators that do this are known as fail fast iterators as they fail quickly and cleanly rather that risking arbitrary non deterministic behavior at an undetermined time in the future note that this exception does not always indicate that an object has been concurrently modified by a different thread if a single thread issues a sequence of method invocations that violates the contract of an object the object may throw this exception for example if a thread modifies a collection directly while it is iterating over the collection with a fail fast iterator the iterator will throw this exception note that fail fast behavior cannot be guaranteed as it is generally speaking impossible to make any hard guarantees in the presence of unsynchronized concurrent modification fail fast operations throw code concurrentmodificationexception on a best effort basis therefore it would be wrong to write a program that depended on this exception for its correctness code concurrentmodificationexception should be used only to detect bugs 
 unchecked exception thrown when duplicate flags are provided in the format specifier unless otherwise specified passing a null argument to any method or constructor in this class will cause a link nullpointerexception to be thrown 
 thrown by methods in the stack class to indicate that the stack is empty 
 unchecked exception thrown when a conversion and flag are incompatible unless otherwise specified passing a null argument to any method or constructor in this class will cause a link nullpointerexception to be thrown 
 unchecked exception thrown when the formatter has been closed unless otherwise specified passing a null argument to any method or constructor in this class will cause a link nullpointerexception to be thrown 
 unchecked exception thrown when a character with an invalid unicode code point as defined by link character isvalidcodepoint is passed to the link formatter unless otherwise specified passing a null argument to any method or constructor in this class will cause a link nullpointerexception to be thrown 
 unchecked exception thrown when the argument corresponding to the format specifier is of an incompatible type unless otherwise specified passing a null argument to any method or constructor in this class will cause a link nullpointerexception to be thrown 
 unchecked exception thrown when a format string contains an illegal syntax or a format specifier that is incompatible with the given arguments only explicit subtypes of this exception which correspond to specific errors should be instantiated 
 unchecked exception thrown when an illegal combination flags is given unless otherwise specified passing a null argument to any method or constructor in this class will cause a link nullpointerexception to be thrown 
 unchecked exception thrown when the precision is a negative value other than 1 the conversion does not support a precision or the value is otherwise unsupported 
 unchecked exception thrown when the format width is a negative value other than 1 or is otherwise unsupported 
 thrown by methods in link locale and link locale builder toindicate that an argument is not a well formed bcp 47 tag 
 thrown by a scanner to indicate that the token retrieved does not match the pattern for the expected type or that the token is out of range for the expected type 
 thrown to indicate that an operation could not complete because the input did not conform to the appropriate xml document type for a collection of properties as per the link properties specification note that although invalidpropertiesformatexception inherits serializable interface from exception it is not intended to be serializable appropriate serialization methods are implemented to throw notserializableexception 
 signals that an error of some sort has occurred while reading from or writing to a jar file 
 unchecked exception thrown when there is a format specifier which does not have a corresponding argument or if an argument index refers to an argument that does not exist unless otherwise specified passing a null argument to any method or constructor in this class will cause a link nullpointerexception to be thrown 
 unchecked exception thrown when the format width is required unless otherwise specified passing a null argument to any method or constructor in this class will cause a link nullpointerexception to be thrown 
 signals that a resource is missing 
 thrown by various accessor methods to indicate that the element being requested does not exist 
 thrown to indicate that a preferences operation could not complete because of a failure in the backing store or a failure to contact the backing store 
 thrown to indicate that an operation could not complete because the input did not conform to the appropriate xml document type for a collection of preferences as per the link preferences specification 
 unchecked exception thrown to indicate a syntax error in a regular expression pattern 
 the toomanylistenersexception exception is used as part of the java event model to annotate and implement a unicast special case of a multicast event source the presence of a throws toomanylistenersexception clause on any given concrete implementation of the normally multicast void addxyzeventlistener event listener registration pattern is used to annotate that interface as implementing a unicast listener special case that is that one and only one listener may be registered on the particular event listener source concurrently 
 unchecked exception thrown when an unknown conversion is given unless otherwise specified passing a null argument to any method or constructor in this class will cause a link nullpointerexception to be thrown 
 unchecked exception thrown when an unknown flag is given unless otherwise specified passing a null argument to any method or constructor in this class will cause a link nullpointerexception to be thrown 
 signals that a data format error has occurred 
 signals that a zip exception of some sort has occurred 
 indicates a link filer detected an attempt to open a file thatwould violate the guarantees provided by the code filer those guarantees include not creating the same file more than once not creating multiple files corresponding to the same type and not creating files for types with invalid names 
 constructs an iioexception with a given message string no underlying cause is set getcause will return null 
 an iioinvalidtreeexception is thrown when an attempt by an iiometadata object to parse a tree of iiometadatanodes fails the node that led to the parsing error may be stored as with any parsing error the actual error may occur at a different point that that where it is detected the node returned by getoffendingnode should merely be considered as a clue to the actual nature of the problem 
 this method is new in the dom l3 for attr interface could throw domexception here but its probably ok to always return false one reason for this is we have no good way to document this exception since this class iioattr is not a public class the rest of the methods that throw domexception are publically documented as such on iiometadatanode 
 indicates that an unknown kind of annotation value was encountered this can occur if the language evolves and new kinds of annotation values can be stored in an annotation may be thrown by an linkplain annotationvaluevisitor annotation value visitor toindicate that the visitor was created for a prior version of the language 
 indicates that an unknown kind of element was encountered this can occur if the language evolves and new kinds of elements are added to the code element hierarchy may be thrown by an linkplain elementvisitor element visitor to indicate that thevisitor was created for a prior version of the language 
 thrown when an application attempts to access the link class objectcorresponding to a link typemirror 
 thrown when an application attempts to access a sequence of link class objects each corresponding to a link typemirror 
 indicates that an unknown kind of type was encountered this can occur if the language evolves and new kinds of types are added to the code typemirror hierarchy may be thrown by a linkplain typevisitor type visitor to indicate that the visitor was createdfor a prior version of the language 
 superclass of exceptions which indicate that an unknown kind of entity was encountered this situation can occur if the language evolves and new kinds of constructs are introduced subclasses of this exception may be thrown by visitors to indicate that the visitor was created for a prior version of the language a common superclass for those exceptions allows a single catch block to have code handling them uniformly 
 the specified attribute does not exist or cannot be retrieved 
 thrown when an invalid mbean attribute is passed to a query constructing method this exception is used internally by jmx during the evaluation of a query user code does not usually see it 
 thrown when an invalid expression is passed to a method for constructing a query this exception is used internally by jmx during the evaluation of a query user code does not usually see it 
 thrown when an invalid string operation is passed to a method for constructing a query 
 the mbean is already registered in the repository 
 the specified mbean does not exist in the repository 
 an exception occurred during the introspection of an mbean 
 thrown when an attempt is made to apply either of the following a subquery expression to an mbean or a qualified attribute expression to an mbean of the wrong class this exception is used internally by jmx during the evaluation of a query user code does not usually see it 
 the value specified is not valid for the attribute 
 exceptions thrown by jmx implementations it does not include the runtime exceptions 
 runtime exceptions emitted by jmx implementations 
 the specified mbean listener does not exist in the repository 
 the format of the string does not correspond to a valid objectname 
 represents user defined exceptions thrown by mbean methods in the agent it wraps the actual user defined exception thrown this exception will be built by the mbeanserver when a call to an mbean method results in an unknown exception 
 wraps exceptions thrown by the preregister prederegister methods of the mbeanregistration interface 
 exception thrown when an invalid target object type is specified the serialversionuid of this class is 1190536278266811217l 
 this exception is thrown when an xml formatted string is being parsed into modelmbean objects or when xml formatted strings are being created from modelmbean objects it is also used to wrapper exceptions from xml parsers that may be used the serialversionuid of this class is 3176664577895105181l 
 exception thrown by the monitor when a monitor setting becomes invalid while the monitor is running as the monitor attributes may change at runtime a check is performed before each observation if a monitor attribute has become invalid a monitor setting exception is thrown 
 exception which occurs when trying to register an object in the mbean server that is not a jmx compliant mbean 
 this runtime exception is thrown to indicate that a method parameter which was expected to be an item name of a composite data or a row index of a tabular data is not valid 
 this runtime exception is thrown to indicate that the open type of an open data value is not the one expected 
 this runtime exception is thrown to indicate that the index of a row to be added to a tabular data instance is already used to refer to another row in this tabular data instance 
 this checked exception is thrown when an open type an open data or an open mbean metadata info instance could not be constructed because one or more validity constraints were not met 
 represents exceptions thrown in the mbean server when performing operations on mbeans 
 represents exceptions thrown in the mbean server when using the java lang reflect classes to invoke methods on mbeans it wraps the actual java lang exception thrown 
 this exception is raised when relation id provided for a relation is already used 
 this exception is raised when an invalid relation service is provided 
 invalid relation type this exception is raised when in a relation type there is already a relation type with that name or the same name has been used for two different role infos or no role info provided or one null role info provided 
 this exception is raised when in a role info its minimum degree is greater than its maximum degree 
 role value is invalid this exception is raised when in a role the number of referenced mbeans in given value is less than expected minimum degree or the number of referenced mbeans in provided value exceeds expected maximum degree or one referenced mbean in the value is not an object of the mbean class expected for that role or an mbean provided for that role does not exist 
 this class is the superclass of any exception which can be raised during relation management 
 this exception is raised when there is no relation for a given relation id in a relation service 
 this exception is raised when an access is done to the relation service and that one is not registered 
 this exception is raised when there is no relation type with given name in relation service 
 this exception is raised when there is no role info with given name in a given relation type 
 this exception is raised when a role in a relation does not exist or is not readable or is not settable 
 exception thrown by link jmxconnectorfactory and link jmxconnectorserverfactory when a provider exists forthe required protocol but cannot be used for some reason 
 exception thrown as the result of a remote link mbeanserver method invocation when an error is thrown while processing the invocation in the remote mbean server a jmxservererrorexception instance contains the original error that occurred as its cause 
 when a java lang error occurs in the agent it should be caught and re thrown as a runtimeerrorexception 
 represents runtime exceptions thrown by mbean methods in the agent it wraps the actual java lang runtimeexception exception thrown this exception will be built by the mbeanserver when a call to an mbean method throws a runtime exception 
 represents runtime exceptions thrown in the agent when performing operations on mbeans it wraps the actual java lang runtimeexception thrown 
 represents exceptions raised when a requested service is not supported 
 this exception is thrown when an authentication error occurs while accessing the naming or directory service an authentication error can happen for example when the credentials supplied by the user program is invalid or otherwise fails to authenticate the user to the naming directory service if the program wants to handle this exception in particular it should catch authenticationexception explicitly before attempting to catch namingexception after catching authenticationexception the program could reattempt the authentication by updating the resolved context s environment properties with the appropriate appropriate credentials synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when the particular flavor of authentication requested is not supported for example if the program is attempting to use strong authentication but the directory naming supports only simple authentication this exception would be thrown identification of a particular flavor of authentication is provider and server specific it may be specified using specific authentication schemes such those identified using sasl or a generic authentication specifier such as simple and strong if the program wants to handle this exception in particular it should catch authenticationnotsupportedexception explicitly before attempting to catch namingexception after catching authenticationnotsupportedexception the program could reattempt the authentication using a different authentication flavor by updating the resolved context s environment properties accordingly synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown to indicate that the operation reached a point in the name where the operation cannot proceed any further when performing an operation on a composite name a naming service provider may reach a part of the name that does not belong to its namespace at that point it can construct a cannotproceedexception and then invoke methods provided by javax naming spi namingmanager such as getcontinuationcontext to locate another provider to continue the operation if this is not possible this exception is raised to the caller of the context operation if the program wants to handle this exception in particular it should catch cannotproceedexception explicitly before attempting to catch namingexception a cannotproceedexception instance is not synchronized against concurrent multithreaded access multiple threads trying to access and modify cannotproceedexception should lock the object 
 this exception is thrown when the client is unable to communicate with the directory or naming service the inability to communicate with the service might be a result of many factors such as network partitioning hardware or interface problems failures on either the client or server side this exception is meant to be used to capture such communication problems synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when there is a configuration problem this can arise when installation of a provider was not done correctly or if there are configuration problems with the server or if configuration information required to access the provider or service is malformed or missing for example a request to use ssl as the security protocol when the service provider software was not configured with the ssl component would cause such an exception another example is if the provider requires that a url be specified as one of the environment properties but the client failed to provide it synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when attempting to destroy a context that is not empty if the program wants to handle this exception in particular it should catch contextnotemptyexception explicitly before attempting to catch namingexception for example after catching contextnotemptyexception the program might try to remove the contents of the context before reattempting the destroy synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when an operation attempts to add an attribute that already exists synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when an attempt is made to add or remove or modify an attribute its identifier or its values that conflicts with the attribute s schema definition or the attribute s state it is thrown in response to dircontext modifyattributes it contains a list of modifications that have not been performed in the order that they were supplied to modifyattributes if the list is null none of the modifications were performed successfully an attributemodificationexception instance is not synchronized against concurrent multithreaded access multiple threads trying to access and modify a single attributemodification instance should lock the object 
 this exception is thrown when an attempt is made to add to create an attribute with an invalid attribute identifier the validity of an attribute identifier is directory specific synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when an attempt is made to add or modify an attribute set that has been specified incompletely or incorrectly this could happen for example when attempting to add or modify a binding or to create a new subcontext without specifying all the mandatory attributes required for creation of the object another situation in which this exception is thrown is by specification of incompatible attributes within the same attribute set or attributes in conflict with that specified by the object s schema synchronization and serialization issues that apply to namingexception apply directly here 
 this class is thrown when an attempt is made to add to an attribute a value that conflicts with the attribute s schema definition this could happen for example if attempting to add an attribute with no value when the attribute is required to have at least one value or if attempting to add more than one value to a single valued attribute or if attempting to add a value that conflicts with the syntax of the attribute synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when the specification of the searchcontrols for a search operation is invalid for example if the scope is set to a value other than object scope onelevel scope subtree scope this exception is thrown synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when the specification of a search filter is invalid the expression of the filter may be invalid or there may be a problem with one of the parameters passed to the filter synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when attempting to access an attribute that does not exist synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when a method in some ways violates the schema an example of schema violation is modifying attributes of an object that violates the object s schema definition another example is renaming or moving an object to a part of the namespace that violates the namespace s schema definition synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when resources are not available to complete the requested operation this might due to a lack of resources on the server or on the client there are no restrictions to resource types as different services might make use of different resources such restrictions might be due to physical limits and or administrative quotas examples of limited resources are internal buffers memory network bandwidth insufficientresourcesexception is different from limitexceededexception in that the latter is due to user system specified limits see limitexceededexception for details synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when the naming operation being invoked has been interrupted for example an application might interrupt a thread that is performing a search if the search supports being interrupted it will throw interruptednamingexception whether an operation is interruptible and when depends on its implementation as provided by the service providers different implementations have different ways of protecting their resources and objects from being damaged due to unexpected interrupts synchronization and serialization issues that apply to namingexception apply directly here 
 this exception indicates that the name being specified does not conform to the naming syntax of a naming system this exception is thrown by any of the methods that does name parsing such as those in context dircontext compositename and compoundname synchronization and serialization issues that apply to namingexception apply directly here 
 this abstract class is used to represent an ldap referral exception it extends the base referralexception by providing a getreferralcontext method that accepts request controls ldapreferralexception is an abstract class concrete implementations of it determine its synchronization and serialization properties a control array passed as a parameter to the getreferralcontext method is owned by the caller the service provider will not modify the array or keep a reference to it although it may keep references to the individual control objects in the array 
 this exception is thrown when a method terminates abnormally due to a user or system specified limit this is different from a insufficientresourceexception in that limitexceededexception is due to a user system specified limit for example running out of memory to complete the request would be an insufficient resource the client asking for 10 answers and getting back 11 is a size limit exception examples of these limits include client and server configuration limits such as size time number of hops etc synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is used to describe problems encounter while resolving links addition information is added to the base namingexception for pinpointing the problem with the link analogous to how namingexception captures name resolution information linkexception captures link name resolution information pinpointing the problem encountered while resolving a link all these fields may be null link resolved name portion of link name that has been resolved link resolved object object to which resolution of link name proceeded link remaining name portion of link name that has not been resolved link explanation detail explaining why link resolution failed a linkexception instance is not synchronized against concurrent multithreaded access multiple threads trying to access and modify a single linkexception instance should lock the object 
 this exception is thrown when a loop was detected will attempting to resolve a link or an implementation specific limit on link counts has been reached synchronization and serialization issues that apply to linkexception apply directly here 
 this exception is thrown when a malformed link was encountered while resolving or constructing a link synchronization and serialization issues that apply to linkexception apply directly here 
 this exception is thrown by methods to indicate that a binding cannot be added because the name is already bound to another object synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when a component of the name cannot be resolved because it is not bound synchronization and serialization issues that apply to namingexception apply directly here 
 this is the superclass of all exceptions thrown by operations in the context and dircontext interfaces the nature of the failure is described by the name of the subclass this exception captures the information pinpointing where the operation failed such as where resolution last proceeded to resolved name portion of name that has been resolved resolved object object to which resolution of name proceeded remaining name portion of name that has not been resolved explanation detail explaining why name resolution failed root exception the exception that caused this naming exception to be thrown null is an acceptable value for any of these fields when null it means that no such information has been recorded for that field a namingexception instance is not synchronized against concurrent multithreaded access multiple threads trying to access and modify a single namingexception instance should lock the object this exception has been retrofitted to conform to the general purpose exception chaining mechanism the root exception or root cause is the same object as the cause returned by the link throwable getcause method 
 this is the superclass of security related exceptions thrown by operations in the context and dircontext interfaces the nature of the failure is described by the name of the subclass if the program wants to handle this exception in particular it should catch namingsecurityexception explicitly before attempting to catch namingexception a program might want to do this for example if it wants to treat security related exceptions specially from other sorts of naming exception synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when no initial context implementation can be created the policy of how an initial context implementation is selected is described in the documentation of the initialcontext class this exception can be thrown during any interaction with the initialcontext not only when the initialcontext is constructed for example the implementation of the initial context might lazily retrieve the context only when actual methods are invoked on it the application should not have any dependency on when the existence of an initial context is determined synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when attempting to perform an operation for which the client has no permission the access control permission model is dictated by the directory naming server synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when a naming operation proceeds to a point where a context is required to continue the operation but the resolved object is not a context for example context destroy requires that the named object be a context if it is not notcontextexception is thrown another example is a non context being encountered during the resolution phase of the context methods it is also thrown when a particular subtype of context is required such as a dircontext and the resolved object is a context but not of the required subtype synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when a context implementation does not support the operation being invoked for example if a server does not support the context bind method it would throw operationnotsupportedexception when the bind method is invoked on it synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown to indicate that the result being returned or returned so far is partial and that the operation cannot be completed for example when listing a context this exception indicates that returned results only represents some of the bindings in the context synchronization and serialization issues that apply to namingexception apply directly here 
 this abstract class is used to represent a referral exception which is generated in response to a referral such as that returned by ldap v3 servers a service provider provides a subclass of referralexception by providing implementations for getreferralinfo and getreferralcontext and appropriate constructors and or corresponding set methods the following code sample shows how referralexception can be used code while true try bindings = ctx listbindings name while bindings hasmore b = bindings next break catch referralexception e ctx = e getreferralcontext referralexception is an abstract class concrete implementations determine its synchronization and serialization properties an environment parameter passed to the getreferralcontext method is owned by the caller the service provider will not modify the object or keep a reference to it but may keep a reference to a clone of it 
 this exception is thrown when attempting to communicate with a directory or naming service and that service is not available it might be unavailable for different reasons for example the server might be too busy to service the request or the server might not be registered to service any requests etc synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when a method produces a result that exceeds a size related limit this can happen for example if the result contains more objects than the user requested or when the size of the result exceeds some implementation specific limit synchronization and serialization issues that apply to namingexception apply directly here 
 this exception is thrown when a method does not terminate within the specified time limit this can happen for example if the user specifies that the method should take no longer than 10 seconds and the method fails to complete with 10 seconds synchronization and serialization issues that apply to namingexception apply directly here 
 thrown to indicate that the requested operation cannot be performed because the set is unmodifiable 
 interface attributeexception is a mixin interface which a subclass of link printexception printexception can implement to report an error conditioninvolving one or more printing attributes that a particular print service instance does not support either the attribute is not supported at all or the attribute is supported but the particular specified value is not supported the print service api does not define any print exception classes that implement interface attributeexception that being left to the print service implementor s discretion 
 interface flavorexception is a mixin interface which a subclass of link printexception printexception can implement to report an error conditioninvolving a doc flavor or flavors class link javax print docflavor docflavor the print service api does not define any print exception classes that implement interface flavorexception that being left to the print service implementor s discretion 
 construct a print exception with the given detail message 
 interface uriexception is a mixin interface which a subclass of link printexception printexception can implement to report an error conditioninvolving a uri address the print service api does not define any print exception classes that implement interface uriexception that being left to the print service implementor s discretion 
 the generic exception class for the scripting apis checked exception types thrown by underlying scripting implementations must be wrapped in instances of scriptexception the class has members to store line and column numbers and filenames if this information is available 
 signals that a code callbackhandler does notrecognize a particular code callback 
 signals that a code destroy operation failed this exception is thrown by credentials implementing the code destroyable interface when the code destroy method fails 
 a generic account exception 
 signals that a user account has expired this exception is thrown by loginmodules when they determine that an account has expired for example a code loginmodule after successfully authenticating a user may determine that the user s account has expired in this case the code loginmodule throws this exception to notify the application the application can then take the appropriate steps to notify the user 
 signals that an account was locked this exception may be thrown by a loginmodule if it determines that authentication is being attempted on a locked account 
 signals that an account was not found this exception may be thrown by a loginmodule if it is unable to locate an account necessary to perform authentication 
 a generic credential exception 
 signals that a code credential has expired this exception is thrown by loginmodules when they determine that a code credential has expired for example a code loginmodule authenticating a userin its code login method may determine that the user spassword although entered correctly has expired in this case the code loginmodule throws this exception to notifythe application the application can then take the appropriate steps to assist the user in updating the password 
 signals that a credential was not found this exception may be thrown by a loginmodule if it is unable to locate a credential necessary to perform authentication 
 signals that user authentication failed this exception is thrown by loginmodules if authentication failed for example a code loginmodule throws this exception ifthe user entered an incorrect password 
 this is the basic login exception 
 signals that a code refresh operation failed this exception is thrown by credentials implementing the code refreshable interface when the code refresh method fails 
 certificate encoding exception this is thrown whenever an error occurs whilst attempting to encode a certificate note the classes in the package code javax security cert exist for compatibility with earlier versions of the java secure sockets extension jsse new applications should instead use the standard java se certificate classes located in code java security cert 
 this exception indicates one of a variety of certificate problems note the classes in the package code javax security cert exist for compatibility with earlier versions of the java secure sockets extension jsse new applications should instead use the standard java se certificate classes located in code java security cert 
 certificate expired exception this is thrown whenever the current code date or the specified code date is after the code notafter date time specified in the validity periodof the certificate note the classes in the package code javax security cert exist for compatibility with earlier versions of the java secure sockets extension jsse new applications should instead use the standard java se certificate classes located in code java security cert 
 certificate is not yet valid exception this is thrown whenever the current code date or the specified code date is before the code notbefore date time in the certificatevalidity period note the classes in the package code javax security cert exist for compatibility with earlier versions of the java secure sockets extension jsse new applications should instead use the standard java se certificate classes located in code java security cert 
 certificate parsing exception this is thrown whenever invalid der encoded certificate is parsed or unsupported der features are found in the certificate note the classes in the package code javax security cert exist for compatibility with earlier versions of the java secure sockets extension jsse new applications should instead use the standard java se certificate classes located in code java security cert 
 this exception is thrown by a sasl mechanism implementation to indicate that the sasl exchange has failed due to reasons related to authentication such as an invalid identity passphrase or key note that the lack of an authenticationexception does not mean that the failure was not due to an authentication error a sasl mechanism implementation might throw the more general saslexception instead of authenticationexception if it is unable to determine the nature of the failure or if does not want to disclose the nature of the failure for example due to security reasons 
 this class represents an error that has occurred when using sasl 
 an invalidmididataexception indicates that inappropriate midi data was encountered this often means that the data is invalid in and of itself from the perspective of the midi specification an example would be an undefined status byte however the exception might simply mean that the data was invalid in the context it was used or that the object to which the data was given was unable to parse or use it for example a file reader might not be able to parse a type 2 midi file even though that format is defined in the midi specification 
 a midiunavailableexception is thrown when a requested midi component cannot be opened or created because it is unavailable this often occurs when a device is in use by another application more generally it can occur when there is a finite number of a certain kind of resource that can be used for some purpose and all of them are already in use perhaps all by this application for an example of the latter case see the link transmitter setreceiver receiver setreceiver method oftransmitter 
 a lineunavailableexception is an exception indicating that a line cannot be opened because it is unavailable this situation arises most commonly when a requested line is already in use by another application 
 an unsupportedaudiofileexception is an exception indicating that an operation failed because a file did not contain valid data of a recognized file type and format 
 creates a new serialexception with the specified message 
 indicates an error with syncfactory mechanism a disconnected rowset implementation cannot be used without a syncprovider being successfully instantiated
 indicates an error with the syncprovider mechanism this exception is created by a syncprovider abstract class extension if it encounters violations in reading from or writing to the originating data source if it is implemented to do so the syncprovider object may also create a syncresolver object and either initialize the syncproviderexception object with it at construction time or set it with the syncprovider object at a later time the method acceptchanges will throw this exception after the writer has finished checking for conflicts and has found one or more conflicts an application may catch a syncproviderexception object and call its getsyncresolver method to get its syncresolver object see the code fragment in the interface comment for syncresolver for an example this syncresolver object will mirror the rowset object that generated the exception except that it will contain only the values from the data source that are in conflict all other values in the syncresolver object will be null the syncresolver object may be used to examine and resolve each conflict in a row and then go to the next row with a conflict to repeat the procedure a syncproviderexception object may or may not contain a description of the condition causing the exception the inherited method getmessage may be called to retrieve the description if there is one 
 this exception is to report bad locations within a document model that is attempts to reference a location that doesn t exist warning serialized objects of this class will not be compatible with future swing releases the current serialization support is appropriate for short term storage or rmi between applications running the same version of swing as of 1 4 support for long term storage of all javabeans trade has been added to the java beans package please see link java beans xmlencoder 
 changedcharsetexception as the name indicates is an exception thrown when the charset is changed 
 exception used to stop and expand collapse from happening see how to write a tree will expand listener in the java tutorial for further information and examples 
 thrown when an undoableedit is told to redo and can t warning serialized objects of this class will not be compatible with future swing releases the current serialization support is appropriate for short term storage or rmi between applications running the same version of swing as of 1 4 support for long term storage of all javabeans trade has been added to the java beans package please see link java beans xmlencoder 
 thrown when an undoableedit is told to undo and can t warning serialized objects of this class will not be compatible with future swing releases the current serialization support is appropriate for short term storage or rmi between applications running the same version of swing as of 1 4 support for long term storage of all javabeans trade has been added to the java beans package please see link java beans xmlencoder 
 an exception that indicates the requested look amp feel management classes are not present on the user s system warning serialized objects of this class will not be compatible with future swing releases the current serialization support is appropriate for short term storage or rmi between applications running the same version of swing as of 1 4 support for long term storage of all javabeans trade has been added to the java beans package please see link java beans xmlencoder 
 exception that represents a failure in a jaxb operation this exception differs from link jaxbexception in thatthis is an unchecked exception while jaxbexception is a checked exception 
 this is the root exception class for all jaxb exceptions 
 this exception indicates that an error has occurred while performing a marshal operation that the provider is unable to recover from the validationeventhandler can cause this exception to be thrown during the marshal operations see link validationeventhandler handleevent validationevent validationeventhandler handleevent validationevent 
 this exception indicates that an error was encountered while getting or setting a property 
 this exception indicates that a violation of a dynamically checked type constraint was detected this exception can be thrown by the generated setter methods of the schema derived java content classes however since fail fast validation is an optional feature for jaxb providers to support not all setter methods will throw this exception when a type constraint is violated if this exception is throw while invoking a fail fast setter the value of the property is guaranteed to remain unchanged as if the setter were never called 
 this exception indicates that an error has occurred while performing an unmarshal operation that prevents the jaxb provider from completing the operation the validationeventhandler can cause this exception to be thrown during the unmarshal operations see link validationeventhandler handleevent validationevent validationeventhandler handleevent validationevent 
 this exception indicates that an error has occurred while performing a validate operation the validationeventhandler can cause this exception to be thrown during the validate operations see link validationeventhandler handleevent validationevent validationeventhandler handleevent validationevent 
 indicates an exceptional condition that occurred while executing a transform algorithm a transformexception can contain a cause another throwable that caused this transformexception to get thrown 
 indicates an exceptional condition that occurred during the xml signature generation or validation process an xmlsignatureexception can contain a cause another throwable that caused this xmlsignatureexception to get thrown 
 indicates an exceptional condition thrown by a link keyselector a keyselectorexception can contain a cause another throwable that caused this keyselectorexception to get thrown 
 indicates an exceptional condition that occurred during the xml marshalling or unmarshalling process a marshalexception can contain a cause another throwable that caused this marshalexception to get thrown 
 this exception is thrown when a particular xml mechanism is requested but is not available in the environment a nosuchmechanismexception can contain a cause another throwable that caused this nosuchmechanismexception to get thrown 
 indicates an exceptional condition thrown while dereferencing a link urireference a urireferenceexception can contain a cause another throwable that caused this urireferenceexception to get thrown 
 indicates a serious configuration error 
 indicates a serious configuration error 
 constructs a soapexception object with the given string as the reason for the exception being thrown 
 the base exception for unexpected processing errors this exception class is used to report well formedness errors as well as unexpected processing conditions 
 create a new transformerconfigurationexception with the string specified as an error message 
 method getlocator retrieves an instance of a sourcelocator object that specifies where an error occurred 
 the httpexception exception represents a xml http fault since there is no standard format for faults or exceptions in xml http messaging only the http status code is captured 
 the protocolexception class is a base class for exceptions related to a specific protocol binding subclasses are used to communicate protocol level fault information to clients and may be used on the server to control the protocol specific fault representation 
 the soapfaultexception exception represents a soap 1 1 or 1 2 fault a soapfaultexception wraps a saaj soapfault that manages the soap specific representation of faults the createfault method of javax xml soap soapfactory may be used to create an instance of javax xml soap soapfault for use with the constructor soapbinding contains an accessor for the soapfactory used by the binding instance note that the value of getfault is the only part of the exception used when searializing a soap fault refer to the soap specification for a complete description of soap faults 
 the webserviceexception class is the base exception class for all jax ws api runtime exceptions 
 xpathexception represents a generic xpath exception 
 xpathexpressionexception represents an error in an xpath expression 
 xpathfactoryconfigurationexception represents a configuration error in a xpathfactory environment 
 xpathfunctionexception represents an error with an xpath function 
 this exception is thrown whenever a gss api error occurs including any mechanism specific error it may contain both the major and the minor gss api status codes major error codes are those defined at the gss api level in this class minor error codes are mechanism specific error codes that can provide additional information the underlying mechanism implementation is responsible for setting appropriate minor status codes when throwing this exception aside from delivering the numeric error codes to the caller this class performs the mapping from their numeric values to textual representations 
 constructs an applicationexception from the corba repository id of the exception and an input stream from which the exception data can be read as its parameters 
 the indirection exception is a java specific system exception it is thrown when the orb s input stream is called to demarshal a value that is encoded as an indirection that is in the process of being demarshaled this can occur when the orb input stream calls the valuehandler to demarshal an rmi value whose state contains a recursive reference to itself because the top level valuehandler read value call has not yet returned a value the orb input stream s indirection table does not contain an entry for an object with the stream offset specified by the indirection tag the stream offset is returned in the exception s offset field 
 constructs an unknownexception object 
 the root class for all corba standard exceptions these exceptions may be thrown as a result of any corba operation invocation and may also be returned by many standard corba api methods the standard exceptions contain a minor code allowing more detailed specification and a completion status this class is subclassed to generate each one of the set of standard orb exceptions systemexception extends java lang runtimeexception thus none of the systemexception exceptions need to be declared in signatures of the java methods mapped from operations in idl interfaces 
 a class that contains user exceptions returned by the server when the client uses the dii to make an invocation any user exception returned from the server is enclosed in an any object contained in the unknownuserexception object this is available from the environment object returned by the method request env 
 the root class for corba idl defined user exceptions all corba user exceptions are checked exceptions which means that they need to be declared in method signatures 
 if an attempt is made to use an object that is not or is no longer usable 
 event operations may throw an eventexception as specified in their method descriptions see also the document object model dom level 2 events specification 
 range operations may throw a rangeexception as specified in their method descriptions see also the document object model dom level 2 traversal and range specification 
 encapsulate a general sax error or warning this module both source code and documentation is in the public domain and comes with no warranty see http www saxproject org for further information this class can contain basic error or warning information from either the xml parser or the application a parser writer or application writer can subclass it to provide additional functionality sax handlers may throw this exception or any exception subclassed from it if the application needs to pass through other types of exceptions it must wrap those exceptions in a saxexception or an exception derived from a saxexception if the parser or application needs to include information about a specific location in an xml document it should use the link org xml sax saxparseexception saxparseexception subclass 
 exception class for an unrecognized identifier this module both source code and documentation is in the public domain and comes with no warranty see http www saxproject org for further information an xmlreader will throw this exception when it finds an unrecognized feature or property identifier sax applications and extensions may use this class for other similar purposes 
 exception class for an unsupported operation this module both source code and documentation is in the public domain and comes with no warranty see http www saxproject org for further information an xmlreader will throw this exception when it recognizes a feature or property identifier but cannot perform the requested operation setting a state or value other sax2 applications and extensions may use this class for similar purposes 
 encapsulate an xml parse error or warning this module both source code and documentation is in the public domain and comes with no warranty see http www saxproject org for further information this exception may include information for locating the error in the original xml document as if it came from a link locator object note that although the application will receive a saxparseexception as the argument to the handlers in the link org xml sax errorhandler errorhandler interface the application is not actually required to throw the exception instead it can simply read the information in it and take a different action since this exception is a subclass of link org xml sax saxexception saxexception it inherits the ability to wrap another exception 
